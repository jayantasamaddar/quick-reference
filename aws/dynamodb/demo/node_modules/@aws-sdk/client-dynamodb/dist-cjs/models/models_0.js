"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImportStatus = exports.GlobalTableNotFoundException = exports.ExportNotFoundException = exports.S3SseAlgorithm = exports.ExportStatus = exports.ExportFormat = exports.TransactionConflictException = exports.ReturnValue = exports.ResourceInUseException = exports.TableStatus = exports.IndexStatus = exports.GlobalTableAlreadyExistsException = exports.TableClass = exports.ReplicaStatus = exports.GlobalTableStatus = exports.TableNotFoundException = exports.TableInUseException = exports.LimitExceededException = exports.ContributorInsightsStatus = exports.ContributorInsightsAction = exports.ContinuousBackupsUnavailableException = exports.PointInTimeRecoveryStatus = exports.ContinuousBackupsStatus = exports.ReturnValuesOnConditionCheckFailure = exports.ConditionalOperator = exports.ConditionalCheckFailedException = exports.ComparisonOperator = exports.ItemCollectionSizeLimitExceededException = exports.ReturnItemCollectionMetrics = exports.ResourceNotFoundException = exports.ProvisionedThroughputExceededException = exports.InvalidEndpointException = exports.RequestLimitExceeded = exports.InternalServerError = exports.BatchStatementErrorCodeEnum = exports.ReturnConsumedCapacity = exports.BackupTypeFilter = exports.BackupNotFoundException = exports.BackupInUseException = exports.TimeToLiveStatus = exports.StreamViewType = exports.SSEStatus = exports.SSEType = exports.ProjectionType = exports.KeyType = exports.BillingMode = exports.BackupType = exports.BackupStatus = exports.ScalarAttributeType = exports.AttributeAction = void 0;
exports.CreateGlobalSecondaryIndexActionFilterSensitiveLog = exports.CreateBackupOutputFilterSensitiveLog = exports.CreateBackupInputFilterSensitiveLog = exports.ContributorInsightsSummaryFilterSensitiveLog = exports.ContinuousBackupsDescriptionFilterSensitiveLog = exports.PointInTimeRecoveryDescriptionFilterSensitiveLog = exports.BillingModeSummaryFilterSensitiveLog = exports.BatchStatementErrorFilterSensitiveLog = exports.ConsumedCapacityFilterSensitiveLog = exports.CapacityFilterSensitiveLog = exports.BackupSummaryFilterSensitiveLog = exports.BackupDescriptionFilterSensitiveLog = exports.SourceTableFeatureDetailsFilterSensitiveLog = exports.TimeToLiveDescriptionFilterSensitiveLog = exports.StreamSpecificationFilterSensitiveLog = exports.SSEDescriptionFilterSensitiveLog = exports.LocalSecondaryIndexInfoFilterSensitiveLog = exports.GlobalSecondaryIndexInfoFilterSensitiveLog = exports.ProjectionFilterSensitiveLog = exports.SourceTableDetailsFilterSensitiveLog = exports.ProvisionedThroughputFilterSensitiveLog = exports.KeySchemaElementFilterSensitiveLog = exports.BackupDetailsFilterSensitiveLog = exports.AutoScalingSettingsUpdateFilterSensitiveLog = exports.AutoScalingSettingsDescriptionFilterSensitiveLog = exports.AutoScalingPolicyUpdateFilterSensitiveLog = exports.AutoScalingTargetTrackingScalingPolicyConfigurationUpdateFilterSensitiveLog = exports.AutoScalingPolicyDescriptionFilterSensitiveLog = exports.AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionFilterSensitiveLog = exports.AttributeDefinitionFilterSensitiveLog = exports.ArchivalSummaryFilterSensitiveLog = exports.TransactionCanceledException = exports.AttributeValue = exports.IndexNotFoundException = exports.ReplicaNotFoundException = exports.ReplicaAlreadyExistsException = exports.InvalidRestoreTimeException = exports.TableAlreadyExistsException = exports.Select = exports.ImportConflictException = exports.PointInTimeRecoveryUnavailableException = exports.InvalidExportTimeException = exports.ExportConflictException = exports.TransactionInProgressException = exports.IdempotentParameterMismatchException = exports.DuplicateItemException = exports.DestinationStatus = exports.ImportNotFoundException = exports.InputFormat = exports.InputCompressionType = void 0;
exports.DescribeImportInputFilterSensitiveLog = exports.DescribeGlobalTableSettingsOutputFilterSensitiveLog = exports.ReplicaSettingsDescriptionFilterSensitiveLog = exports.ReplicaGlobalSecondaryIndexSettingsDescriptionFilterSensitiveLog = exports.DescribeGlobalTableSettingsInputFilterSensitiveLog = exports.DescribeGlobalTableOutputFilterSensitiveLog = exports.DescribeGlobalTableInputFilterSensitiveLog = exports.DescribeExportOutputFilterSensitiveLog = exports.ExportDescriptionFilterSensitiveLog = exports.DescribeExportInputFilterSensitiveLog = exports.DescribeEndpointsResponseFilterSensitiveLog = exports.EndpointFilterSensitiveLog = exports.DescribeEndpointsRequestFilterSensitiveLog = exports.DescribeContributorInsightsOutputFilterSensitiveLog = exports.FailureExceptionFilterSensitiveLog = exports.DescribeContributorInsightsInputFilterSensitiveLog = exports.DescribeContinuousBackupsOutputFilterSensitiveLog = exports.DescribeContinuousBackupsInputFilterSensitiveLog = exports.DescribeBackupOutputFilterSensitiveLog = exports.DescribeBackupInputFilterSensitiveLog = exports.DeleteTableOutputFilterSensitiveLog = exports.DeleteTableInputFilterSensitiveLog = exports.DeleteReplicationGroupMemberActionFilterSensitiveLog = exports.DeleteReplicaActionFilterSensitiveLog = exports.DeleteGlobalSecondaryIndexActionFilterSensitiveLog = exports.DeleteBackupOutputFilterSensitiveLog = exports.DeleteBackupInputFilterSensitiveLog = exports.CsvOptionsFilterSensitiveLog = exports.CreateTableOutputFilterSensitiveLog = exports.TableDescriptionFilterSensitiveLog = exports.RestoreSummaryFilterSensitiveLog = exports.LocalSecondaryIndexDescriptionFilterSensitiveLog = exports.GlobalSecondaryIndexDescriptionFilterSensitiveLog = exports.ProvisionedThroughputDescriptionFilterSensitiveLog = exports.CreateTableInputFilterSensitiveLog = exports.TagFilterSensitiveLog = exports.SSESpecificationFilterSensitiveLog = exports.LocalSecondaryIndexFilterSensitiveLog = exports.GlobalSecondaryIndexFilterSensitiveLog = exports.CreateReplicationGroupMemberActionFilterSensitiveLog = exports.ReplicaGlobalSecondaryIndexFilterSensitiveLog = exports.CreateReplicaActionFilterSensitiveLog = exports.CreateGlobalTableOutputFilterSensitiveLog = exports.GlobalTableDescriptionFilterSensitiveLog = exports.ReplicaDescriptionFilterSensitiveLog = exports.TableClassSummaryFilterSensitiveLog = exports.ReplicaGlobalSecondaryIndexDescriptionFilterSensitiveLog = exports.ProvisionedThroughputOverrideFilterSensitiveLog = exports.CreateGlobalTableInputFilterSensitiveLog = exports.ReplicaFilterSensitiveLog = void 0;
exports.UpdateContinuousBackupsInputFilterSensitiveLog = exports.PointInTimeRecoverySpecificationFilterSensitiveLog = exports.UntagResourceInputFilterSensitiveLog = exports.TagResourceInputFilterSensitiveLog = exports.RestoreTableToPointInTimeOutputFilterSensitiveLog = exports.RestoreTableToPointInTimeInputFilterSensitiveLog = exports.RestoreTableFromBackupOutputFilterSensitiveLog = exports.RestoreTableFromBackupInputFilterSensitiveLog = exports.ListTagsOfResourceOutputFilterSensitiveLog = exports.ListTagsOfResourceInputFilterSensitiveLog = exports.ListTablesOutputFilterSensitiveLog = exports.ListTablesInputFilterSensitiveLog = exports.ListImportsOutputFilterSensitiveLog = exports.ImportSummaryFilterSensitiveLog = exports.ListImportsInputFilterSensitiveLog = exports.ListGlobalTablesOutputFilterSensitiveLog = exports.GlobalTableFilterSensitiveLog = exports.ListGlobalTablesInputFilterSensitiveLog = exports.ListExportsOutputFilterSensitiveLog = exports.ExportSummaryFilterSensitiveLog = exports.ListExportsInputFilterSensitiveLog = exports.ListContributorInsightsOutputFilterSensitiveLog = exports.ListContributorInsightsInputFilterSensitiveLog = exports.ListBackupsOutputFilterSensitiveLog = exports.ListBackupsInputFilterSensitiveLog = exports.ImportTableOutputFilterSensitiveLog = exports.ImportTableInputFilterSensitiveLog = exports.ExportTableToPointInTimeOutputFilterSensitiveLog = exports.ExportTableToPointInTimeInputFilterSensitiveLog = exports.KinesisStreamingDestinationOutputFilterSensitiveLog = exports.KinesisStreamingDestinationInputFilterSensitiveLog = exports.DescribeTimeToLiveOutputFilterSensitiveLog = exports.DescribeTimeToLiveInputFilterSensitiveLog = exports.DescribeTableReplicaAutoScalingOutputFilterSensitiveLog = exports.TableAutoScalingDescriptionFilterSensitiveLog = exports.ReplicaAutoScalingDescriptionFilterSensitiveLog = exports.ReplicaGlobalSecondaryIndexAutoScalingDescriptionFilterSensitiveLog = exports.DescribeTableReplicaAutoScalingInputFilterSensitiveLog = exports.DescribeTableOutputFilterSensitiveLog = exports.DescribeTableInputFilterSensitiveLog = exports.DescribeLimitsOutputFilterSensitiveLog = exports.DescribeLimitsInputFilterSensitiveLog = exports.DescribeKinesisStreamingDestinationOutputFilterSensitiveLog = exports.KinesisDataStreamDestinationFilterSensitiveLog = exports.DescribeKinesisStreamingDestinationInputFilterSensitiveLog = exports.DescribeImportOutputFilterSensitiveLog = exports.ImportTableDescriptionFilterSensitiveLog = exports.TableCreationParametersFilterSensitiveLog = exports.S3BucketSourceFilterSensitiveLog = exports.InputFormatOptionsFilterSensitiveLog = void 0;
exports.TransactGetItemsInputFilterSensitiveLog = exports.ExpectedAttributeValueFilterSensitiveLog = exports.BatchGetItemInputFilterSensitiveLog = exports.TransactGetItemsOutputFilterSensitiveLog = exports.ExecuteTransactionOutputFilterSensitiveLog = exports.ExecuteTransactionInputFilterSensitiveLog = exports.BatchExecuteStatementOutputFilterSensitiveLog = exports.BatchExecuteStatementInputFilterSensitiveLog = exports.TransactGetItemFilterSensitiveLog = exports.KeysAndAttributesFilterSensitiveLog = exports.PutRequestFilterSensitiveLog = exports.ParameterizedStatementFilterSensitiveLog = exports.ItemResponseFilterSensitiveLog = exports.ItemCollectionMetricsFilterSensitiveLog = exports.GetItemOutputFilterSensitiveLog = exports.GetItemInputFilterSensitiveLog = exports.GetFilterSensitiveLog = exports.ExecuteStatementInputFilterSensitiveLog = exports.DeleteRequestFilterSensitiveLog = exports.ConditionFilterSensitiveLog = exports.CancellationReasonFilterSensitiveLog = exports.BatchStatementResponseFilterSensitiveLog = exports.BatchStatementRequestFilterSensitiveLog = exports.AttributeValueUpdateFilterSensitiveLog = exports.AttributeValueFilterSensitiveLog = exports.UpdateTimeToLiveOutputFilterSensitiveLog = exports.UpdateTimeToLiveInputFilterSensitiveLog = exports.TimeToLiveSpecificationFilterSensitiveLog = exports.UpdateTableReplicaAutoScalingOutputFilterSensitiveLog = exports.UpdateTableReplicaAutoScalingInputFilterSensitiveLog = exports.ReplicaAutoScalingUpdateFilterSensitiveLog = exports.ReplicaGlobalSecondaryIndexAutoScalingUpdateFilterSensitiveLog = exports.GlobalSecondaryIndexAutoScalingUpdateFilterSensitiveLog = exports.UpdateTableOutputFilterSensitiveLog = exports.UpdateTableInputFilterSensitiveLog = exports.ReplicationGroupUpdateFilterSensitiveLog = exports.UpdateReplicationGroupMemberActionFilterSensitiveLog = exports.GlobalSecondaryIndexUpdateFilterSensitiveLog = exports.UpdateGlobalSecondaryIndexActionFilterSensitiveLog = exports.UpdateGlobalTableSettingsOutputFilterSensitiveLog = exports.UpdateGlobalTableSettingsInputFilterSensitiveLog = exports.ReplicaSettingsUpdateFilterSensitiveLog = exports.ReplicaGlobalSecondaryIndexSettingsUpdateFilterSensitiveLog = exports.GlobalTableGlobalSecondaryIndexSettingsUpdateFilterSensitiveLog = exports.UpdateGlobalTableOutputFilterSensitiveLog = exports.UpdateGlobalTableInputFilterSensitiveLog = exports.ReplicaUpdateFilterSensitiveLog = exports.UpdateContributorInsightsOutputFilterSensitiveLog = exports.UpdateContributorInsightsInputFilterSensitiveLog = exports.UpdateContinuousBackupsOutputFilterSensitiveLog = void 0;
exports.TransactWriteItemsInputFilterSensitiveLog = exports.TransactWriteItemFilterSensitiveLog = exports.UpdateItemInputFilterSensitiveLog = exports.BatchWriteItemOutputFilterSensitiveLog = exports.QueryInputFilterSensitiveLog = exports.PutItemInputFilterSensitiveLog = exports.DeleteItemInputFilterSensitiveLog = exports.BatchWriteItemInputFilterSensitiveLog = exports.ScanInputFilterSensitiveLog = exports.BatchGetItemOutputFilterSensitiveLog = exports.WriteRequestFilterSensitiveLog = exports.UpdateItemOutputFilterSensitiveLog = exports.ScanOutputFilterSensitiveLog = exports.QueryOutputFilterSensitiveLog = exports.PutItemOutputFilterSensitiveLog = exports.ExecuteStatementOutputFilterSensitiveLog = exports.DeleteItemOutputFilterSensitiveLog = exports.UpdateFilterSensitiveLog = exports.PutFilterSensitiveLog = exports.DeleteFilterSensitiveLog = exports.ConditionCheckFilterSensitiveLog = exports.TransactWriteItemsOutputFilterSensitiveLog = void 0;
const DynamoDBServiceException_1 = require("./DynamoDBServiceException");
var AttributeAction;
(function (AttributeAction) {
    AttributeAction["ADD"] = "ADD";
    AttributeAction["DELETE"] = "DELETE";
    AttributeAction["PUT"] = "PUT";
})(AttributeAction = exports.AttributeAction || (exports.AttributeAction = {}));
var ScalarAttributeType;
(function (ScalarAttributeType) {
    ScalarAttributeType["B"] = "B";
    ScalarAttributeType["N"] = "N";
    ScalarAttributeType["S"] = "S";
})(ScalarAttributeType = exports.ScalarAttributeType || (exports.ScalarAttributeType = {}));
var BackupStatus;
(function (BackupStatus) {
    BackupStatus["AVAILABLE"] = "AVAILABLE";
    BackupStatus["CREATING"] = "CREATING";
    BackupStatus["DELETED"] = "DELETED";
})(BackupStatus = exports.BackupStatus || (exports.BackupStatus = {}));
var BackupType;
(function (BackupType) {
    BackupType["AWS_BACKUP"] = "AWS_BACKUP";
    BackupType["SYSTEM"] = "SYSTEM";
    BackupType["USER"] = "USER";
})(BackupType = exports.BackupType || (exports.BackupType = {}));
var BillingMode;
(function (BillingMode) {
    BillingMode["PAY_PER_REQUEST"] = "PAY_PER_REQUEST";
    BillingMode["PROVISIONED"] = "PROVISIONED";
})(BillingMode = exports.BillingMode || (exports.BillingMode = {}));
var KeyType;
(function (KeyType) {
    KeyType["HASH"] = "HASH";
    KeyType["RANGE"] = "RANGE";
})(KeyType = exports.KeyType || (exports.KeyType = {}));
var ProjectionType;
(function (ProjectionType) {
    ProjectionType["ALL"] = "ALL";
    ProjectionType["INCLUDE"] = "INCLUDE";
    ProjectionType["KEYS_ONLY"] = "KEYS_ONLY";
})(ProjectionType = exports.ProjectionType || (exports.ProjectionType = {}));
var SSEType;
(function (SSEType) {
    SSEType["AES256"] = "AES256";
    SSEType["KMS"] = "KMS";
})(SSEType = exports.SSEType || (exports.SSEType = {}));
var SSEStatus;
(function (SSEStatus) {
    SSEStatus["DISABLED"] = "DISABLED";
    SSEStatus["DISABLING"] = "DISABLING";
    SSEStatus["ENABLED"] = "ENABLED";
    SSEStatus["ENABLING"] = "ENABLING";
    SSEStatus["UPDATING"] = "UPDATING";
})(SSEStatus = exports.SSEStatus || (exports.SSEStatus = {}));
var StreamViewType;
(function (StreamViewType) {
    StreamViewType["KEYS_ONLY"] = "KEYS_ONLY";
    StreamViewType["NEW_AND_OLD_IMAGES"] = "NEW_AND_OLD_IMAGES";
    StreamViewType["NEW_IMAGE"] = "NEW_IMAGE";
    StreamViewType["OLD_IMAGE"] = "OLD_IMAGE";
})(StreamViewType = exports.StreamViewType || (exports.StreamViewType = {}));
var TimeToLiveStatus;
(function (TimeToLiveStatus) {
    TimeToLiveStatus["DISABLED"] = "DISABLED";
    TimeToLiveStatus["DISABLING"] = "DISABLING";
    TimeToLiveStatus["ENABLED"] = "ENABLED";
    TimeToLiveStatus["ENABLING"] = "ENABLING";
})(TimeToLiveStatus = exports.TimeToLiveStatus || (exports.TimeToLiveStatus = {}));
class BackupInUseException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "BackupInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "BackupInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, BackupInUseException.prototype);
    }
}
exports.BackupInUseException = BackupInUseException;
class BackupNotFoundException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "BackupNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "BackupNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, BackupNotFoundException.prototype);
    }
}
exports.BackupNotFoundException = BackupNotFoundException;
var BackupTypeFilter;
(function (BackupTypeFilter) {
    BackupTypeFilter["ALL"] = "ALL";
    BackupTypeFilter["AWS_BACKUP"] = "AWS_BACKUP";
    BackupTypeFilter["SYSTEM"] = "SYSTEM";
    BackupTypeFilter["USER"] = "USER";
})(BackupTypeFilter = exports.BackupTypeFilter || (exports.BackupTypeFilter = {}));
var ReturnConsumedCapacity;
(function (ReturnConsumedCapacity) {
    ReturnConsumedCapacity["INDEXES"] = "INDEXES";
    ReturnConsumedCapacity["NONE"] = "NONE";
    ReturnConsumedCapacity["TOTAL"] = "TOTAL";
})(ReturnConsumedCapacity = exports.ReturnConsumedCapacity || (exports.ReturnConsumedCapacity = {}));
var BatchStatementErrorCodeEnum;
(function (BatchStatementErrorCodeEnum) {
    BatchStatementErrorCodeEnum["AccessDenied"] = "AccessDenied";
    BatchStatementErrorCodeEnum["ConditionalCheckFailed"] = "ConditionalCheckFailed";
    BatchStatementErrorCodeEnum["DuplicateItem"] = "DuplicateItem";
    BatchStatementErrorCodeEnum["InternalServerError"] = "InternalServerError";
    BatchStatementErrorCodeEnum["ItemCollectionSizeLimitExceeded"] = "ItemCollectionSizeLimitExceeded";
    BatchStatementErrorCodeEnum["ProvisionedThroughputExceeded"] = "ProvisionedThroughputExceeded";
    BatchStatementErrorCodeEnum["RequestLimitExceeded"] = "RequestLimitExceeded";
    BatchStatementErrorCodeEnum["ResourceNotFound"] = "ResourceNotFound";
    BatchStatementErrorCodeEnum["ThrottlingError"] = "ThrottlingError";
    BatchStatementErrorCodeEnum["TransactionConflict"] = "TransactionConflict";
    BatchStatementErrorCodeEnum["ValidationError"] = "ValidationError";
})(BatchStatementErrorCodeEnum = exports.BatchStatementErrorCodeEnum || (exports.BatchStatementErrorCodeEnum = {}));
class InternalServerError extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "InternalServerError",
            $fault: "server",
            ...opts,
        });
        this.name = "InternalServerError";
        this.$fault = "server";
        Object.setPrototypeOf(this, InternalServerError.prototype);
    }
}
exports.InternalServerError = InternalServerError;
class RequestLimitExceeded extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "RequestLimitExceeded",
            $fault: "client",
            ...opts,
        });
        this.name = "RequestLimitExceeded";
        this.$fault = "client";
        Object.setPrototypeOf(this, RequestLimitExceeded.prototype);
    }
}
exports.RequestLimitExceeded = RequestLimitExceeded;
class InvalidEndpointException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "InvalidEndpointException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidEndpointException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidEndpointException.prototype);
        this.Message = opts.Message;
    }
}
exports.InvalidEndpointException = InvalidEndpointException;
class ProvisionedThroughputExceededException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "ProvisionedThroughputExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ProvisionedThroughputExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ProvisionedThroughputExceededException.prototype);
    }
}
exports.ProvisionedThroughputExceededException = ProvisionedThroughputExceededException;
class ResourceNotFoundException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "ResourceNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);
    }
}
exports.ResourceNotFoundException = ResourceNotFoundException;
var ReturnItemCollectionMetrics;
(function (ReturnItemCollectionMetrics) {
    ReturnItemCollectionMetrics["NONE"] = "NONE";
    ReturnItemCollectionMetrics["SIZE"] = "SIZE";
})(ReturnItemCollectionMetrics = exports.ReturnItemCollectionMetrics || (exports.ReturnItemCollectionMetrics = {}));
class ItemCollectionSizeLimitExceededException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "ItemCollectionSizeLimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "ItemCollectionSizeLimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ItemCollectionSizeLimitExceededException.prototype);
    }
}
exports.ItemCollectionSizeLimitExceededException = ItemCollectionSizeLimitExceededException;
var ComparisonOperator;
(function (ComparisonOperator) {
    ComparisonOperator["BEGINS_WITH"] = "BEGINS_WITH";
    ComparisonOperator["BETWEEN"] = "BETWEEN";
    ComparisonOperator["CONTAINS"] = "CONTAINS";
    ComparisonOperator["EQ"] = "EQ";
    ComparisonOperator["GE"] = "GE";
    ComparisonOperator["GT"] = "GT";
    ComparisonOperator["IN"] = "IN";
    ComparisonOperator["LE"] = "LE";
    ComparisonOperator["LT"] = "LT";
    ComparisonOperator["NE"] = "NE";
    ComparisonOperator["NOT_CONTAINS"] = "NOT_CONTAINS";
    ComparisonOperator["NOT_NULL"] = "NOT_NULL";
    ComparisonOperator["NULL"] = "NULL";
})(ComparisonOperator = exports.ComparisonOperator || (exports.ComparisonOperator = {}));
class ConditionalCheckFailedException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "ConditionalCheckFailedException",
            $fault: "client",
            ...opts,
        });
        this.name = "ConditionalCheckFailedException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ConditionalCheckFailedException.prototype);
    }
}
exports.ConditionalCheckFailedException = ConditionalCheckFailedException;
var ConditionalOperator;
(function (ConditionalOperator) {
    ConditionalOperator["AND"] = "AND";
    ConditionalOperator["OR"] = "OR";
})(ConditionalOperator = exports.ConditionalOperator || (exports.ConditionalOperator = {}));
var ReturnValuesOnConditionCheckFailure;
(function (ReturnValuesOnConditionCheckFailure) {
    ReturnValuesOnConditionCheckFailure["ALL_OLD"] = "ALL_OLD";
    ReturnValuesOnConditionCheckFailure["NONE"] = "NONE";
})(ReturnValuesOnConditionCheckFailure = exports.ReturnValuesOnConditionCheckFailure || (exports.ReturnValuesOnConditionCheckFailure = {}));
var ContinuousBackupsStatus;
(function (ContinuousBackupsStatus) {
    ContinuousBackupsStatus["DISABLED"] = "DISABLED";
    ContinuousBackupsStatus["ENABLED"] = "ENABLED";
})(ContinuousBackupsStatus = exports.ContinuousBackupsStatus || (exports.ContinuousBackupsStatus = {}));
var PointInTimeRecoveryStatus;
(function (PointInTimeRecoveryStatus) {
    PointInTimeRecoveryStatus["DISABLED"] = "DISABLED";
    PointInTimeRecoveryStatus["ENABLED"] = "ENABLED";
})(PointInTimeRecoveryStatus = exports.PointInTimeRecoveryStatus || (exports.PointInTimeRecoveryStatus = {}));
class ContinuousBackupsUnavailableException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "ContinuousBackupsUnavailableException",
            $fault: "client",
            ...opts,
        });
        this.name = "ContinuousBackupsUnavailableException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ContinuousBackupsUnavailableException.prototype);
    }
}
exports.ContinuousBackupsUnavailableException = ContinuousBackupsUnavailableException;
var ContributorInsightsAction;
(function (ContributorInsightsAction) {
    ContributorInsightsAction["DISABLE"] = "DISABLE";
    ContributorInsightsAction["ENABLE"] = "ENABLE";
})(ContributorInsightsAction = exports.ContributorInsightsAction || (exports.ContributorInsightsAction = {}));
var ContributorInsightsStatus;
(function (ContributorInsightsStatus) {
    ContributorInsightsStatus["DISABLED"] = "DISABLED";
    ContributorInsightsStatus["DISABLING"] = "DISABLING";
    ContributorInsightsStatus["ENABLED"] = "ENABLED";
    ContributorInsightsStatus["ENABLING"] = "ENABLING";
    ContributorInsightsStatus["FAILED"] = "FAILED";
})(ContributorInsightsStatus = exports.ContributorInsightsStatus || (exports.ContributorInsightsStatus = {}));
class LimitExceededException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "LimitExceededException",
            $fault: "client",
            ...opts,
        });
        this.name = "LimitExceededException";
        this.$fault = "client";
        Object.setPrototypeOf(this, LimitExceededException.prototype);
    }
}
exports.LimitExceededException = LimitExceededException;
class TableInUseException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "TableInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "TableInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TableInUseException.prototype);
    }
}
exports.TableInUseException = TableInUseException;
class TableNotFoundException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "TableNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "TableNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TableNotFoundException.prototype);
    }
}
exports.TableNotFoundException = TableNotFoundException;
var GlobalTableStatus;
(function (GlobalTableStatus) {
    GlobalTableStatus["ACTIVE"] = "ACTIVE";
    GlobalTableStatus["CREATING"] = "CREATING";
    GlobalTableStatus["DELETING"] = "DELETING";
    GlobalTableStatus["UPDATING"] = "UPDATING";
})(GlobalTableStatus = exports.GlobalTableStatus || (exports.GlobalTableStatus = {}));
var ReplicaStatus;
(function (ReplicaStatus) {
    ReplicaStatus["ACTIVE"] = "ACTIVE";
    ReplicaStatus["CREATING"] = "CREATING";
    ReplicaStatus["CREATION_FAILED"] = "CREATION_FAILED";
    ReplicaStatus["DELETING"] = "DELETING";
    ReplicaStatus["INACCESSIBLE_ENCRYPTION_CREDENTIALS"] = "INACCESSIBLE_ENCRYPTION_CREDENTIALS";
    ReplicaStatus["REGION_DISABLED"] = "REGION_DISABLED";
    ReplicaStatus["UPDATING"] = "UPDATING";
})(ReplicaStatus = exports.ReplicaStatus || (exports.ReplicaStatus = {}));
var TableClass;
(function (TableClass) {
    TableClass["STANDARD"] = "STANDARD";
    TableClass["STANDARD_INFREQUENT_ACCESS"] = "STANDARD_INFREQUENT_ACCESS";
})(TableClass = exports.TableClass || (exports.TableClass = {}));
class GlobalTableAlreadyExistsException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "GlobalTableAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "GlobalTableAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, GlobalTableAlreadyExistsException.prototype);
    }
}
exports.GlobalTableAlreadyExistsException = GlobalTableAlreadyExistsException;
var IndexStatus;
(function (IndexStatus) {
    IndexStatus["ACTIVE"] = "ACTIVE";
    IndexStatus["CREATING"] = "CREATING";
    IndexStatus["DELETING"] = "DELETING";
    IndexStatus["UPDATING"] = "UPDATING";
})(IndexStatus = exports.IndexStatus || (exports.IndexStatus = {}));
var TableStatus;
(function (TableStatus) {
    TableStatus["ACTIVE"] = "ACTIVE";
    TableStatus["ARCHIVED"] = "ARCHIVED";
    TableStatus["ARCHIVING"] = "ARCHIVING";
    TableStatus["CREATING"] = "CREATING";
    TableStatus["DELETING"] = "DELETING";
    TableStatus["INACCESSIBLE_ENCRYPTION_CREDENTIALS"] = "INACCESSIBLE_ENCRYPTION_CREDENTIALS";
    TableStatus["UPDATING"] = "UPDATING";
})(TableStatus = exports.TableStatus || (exports.TableStatus = {}));
class ResourceInUseException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "ResourceInUseException",
            $fault: "client",
            ...opts,
        });
        this.name = "ResourceInUseException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ResourceInUseException.prototype);
    }
}
exports.ResourceInUseException = ResourceInUseException;
var ReturnValue;
(function (ReturnValue) {
    ReturnValue["ALL_NEW"] = "ALL_NEW";
    ReturnValue["ALL_OLD"] = "ALL_OLD";
    ReturnValue["NONE"] = "NONE";
    ReturnValue["UPDATED_NEW"] = "UPDATED_NEW";
    ReturnValue["UPDATED_OLD"] = "UPDATED_OLD";
})(ReturnValue = exports.ReturnValue || (exports.ReturnValue = {}));
class TransactionConflictException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "TransactionConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "TransactionConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TransactionConflictException.prototype);
    }
}
exports.TransactionConflictException = TransactionConflictException;
var ExportFormat;
(function (ExportFormat) {
    ExportFormat["DYNAMODB_JSON"] = "DYNAMODB_JSON";
    ExportFormat["ION"] = "ION";
})(ExportFormat = exports.ExportFormat || (exports.ExportFormat = {}));
var ExportStatus;
(function (ExportStatus) {
    ExportStatus["COMPLETED"] = "COMPLETED";
    ExportStatus["FAILED"] = "FAILED";
    ExportStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(ExportStatus = exports.ExportStatus || (exports.ExportStatus = {}));
var S3SseAlgorithm;
(function (S3SseAlgorithm) {
    S3SseAlgorithm["AES256"] = "AES256";
    S3SseAlgorithm["KMS"] = "KMS";
})(S3SseAlgorithm = exports.S3SseAlgorithm || (exports.S3SseAlgorithm = {}));
class ExportNotFoundException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "ExportNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ExportNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExportNotFoundException.prototype);
    }
}
exports.ExportNotFoundException = ExportNotFoundException;
class GlobalTableNotFoundException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "GlobalTableNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "GlobalTableNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, GlobalTableNotFoundException.prototype);
    }
}
exports.GlobalTableNotFoundException = GlobalTableNotFoundException;
var ImportStatus;
(function (ImportStatus) {
    ImportStatus["CANCELLED"] = "CANCELLED";
    ImportStatus["CANCELLING"] = "CANCELLING";
    ImportStatus["COMPLETED"] = "COMPLETED";
    ImportStatus["FAILED"] = "FAILED";
    ImportStatus["IN_PROGRESS"] = "IN_PROGRESS";
})(ImportStatus = exports.ImportStatus || (exports.ImportStatus = {}));
var InputCompressionType;
(function (InputCompressionType) {
    InputCompressionType["GZIP"] = "GZIP";
    InputCompressionType["NONE"] = "NONE";
    InputCompressionType["ZSTD"] = "ZSTD";
})(InputCompressionType = exports.InputCompressionType || (exports.InputCompressionType = {}));
var InputFormat;
(function (InputFormat) {
    InputFormat["CSV"] = "CSV";
    InputFormat["DYNAMODB_JSON"] = "DYNAMODB_JSON";
    InputFormat["ION"] = "ION";
})(InputFormat = exports.InputFormat || (exports.InputFormat = {}));
class ImportNotFoundException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "ImportNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ImportNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ImportNotFoundException.prototype);
    }
}
exports.ImportNotFoundException = ImportNotFoundException;
var DestinationStatus;
(function (DestinationStatus) {
    DestinationStatus["ACTIVE"] = "ACTIVE";
    DestinationStatus["DISABLED"] = "DISABLED";
    DestinationStatus["DISABLING"] = "DISABLING";
    DestinationStatus["ENABLE_FAILED"] = "ENABLE_FAILED";
    DestinationStatus["ENABLING"] = "ENABLING";
})(DestinationStatus = exports.DestinationStatus || (exports.DestinationStatus = {}));
class DuplicateItemException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "DuplicateItemException",
            $fault: "client",
            ...opts,
        });
        this.name = "DuplicateItemException";
        this.$fault = "client";
        Object.setPrototypeOf(this, DuplicateItemException.prototype);
    }
}
exports.DuplicateItemException = DuplicateItemException;
class IdempotentParameterMismatchException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "IdempotentParameterMismatchException",
            $fault: "client",
            ...opts,
        });
        this.name = "IdempotentParameterMismatchException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IdempotentParameterMismatchException.prototype);
        this.Message = opts.Message;
    }
}
exports.IdempotentParameterMismatchException = IdempotentParameterMismatchException;
class TransactionInProgressException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "TransactionInProgressException",
            $fault: "client",
            ...opts,
        });
        this.name = "TransactionInProgressException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TransactionInProgressException.prototype);
        this.Message = opts.Message;
    }
}
exports.TransactionInProgressException = TransactionInProgressException;
class ExportConflictException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "ExportConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ExportConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ExportConflictException.prototype);
    }
}
exports.ExportConflictException = ExportConflictException;
class InvalidExportTimeException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "InvalidExportTimeException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidExportTimeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidExportTimeException.prototype);
    }
}
exports.InvalidExportTimeException = InvalidExportTimeException;
class PointInTimeRecoveryUnavailableException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "PointInTimeRecoveryUnavailableException",
            $fault: "client",
            ...opts,
        });
        this.name = "PointInTimeRecoveryUnavailableException";
        this.$fault = "client";
        Object.setPrototypeOf(this, PointInTimeRecoveryUnavailableException.prototype);
    }
}
exports.PointInTimeRecoveryUnavailableException = PointInTimeRecoveryUnavailableException;
class ImportConflictException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "ImportConflictException",
            $fault: "client",
            ...opts,
        });
        this.name = "ImportConflictException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ImportConflictException.prototype);
    }
}
exports.ImportConflictException = ImportConflictException;
var Select;
(function (Select) {
    Select["ALL_ATTRIBUTES"] = "ALL_ATTRIBUTES";
    Select["ALL_PROJECTED_ATTRIBUTES"] = "ALL_PROJECTED_ATTRIBUTES";
    Select["COUNT"] = "COUNT";
    Select["SPECIFIC_ATTRIBUTES"] = "SPECIFIC_ATTRIBUTES";
})(Select = exports.Select || (exports.Select = {}));
class TableAlreadyExistsException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "TableAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "TableAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TableAlreadyExistsException.prototype);
    }
}
exports.TableAlreadyExistsException = TableAlreadyExistsException;
class InvalidRestoreTimeException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "InvalidRestoreTimeException",
            $fault: "client",
            ...opts,
        });
        this.name = "InvalidRestoreTimeException";
        this.$fault = "client";
        Object.setPrototypeOf(this, InvalidRestoreTimeException.prototype);
    }
}
exports.InvalidRestoreTimeException = InvalidRestoreTimeException;
class ReplicaAlreadyExistsException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "ReplicaAlreadyExistsException",
            $fault: "client",
            ...opts,
        });
        this.name = "ReplicaAlreadyExistsException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReplicaAlreadyExistsException.prototype);
    }
}
exports.ReplicaAlreadyExistsException = ReplicaAlreadyExistsException;
class ReplicaNotFoundException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "ReplicaNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "ReplicaNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, ReplicaNotFoundException.prototype);
    }
}
exports.ReplicaNotFoundException = ReplicaNotFoundException;
class IndexNotFoundException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "IndexNotFoundException",
            $fault: "client",
            ...opts,
        });
        this.name = "IndexNotFoundException";
        this.$fault = "client";
        Object.setPrototypeOf(this, IndexNotFoundException.prototype);
    }
}
exports.IndexNotFoundException = IndexNotFoundException;
var AttributeValue;
(function (AttributeValue) {
    AttributeValue.visit = (value, visitor) => {
        if (value.S !== undefined)
            return visitor.S(value.S);
        if (value.N !== undefined)
            return visitor.N(value.N);
        if (value.B !== undefined)
            return visitor.B(value.B);
        if (value.SS !== undefined)
            return visitor.SS(value.SS);
        if (value.NS !== undefined)
            return visitor.NS(value.NS);
        if (value.BS !== undefined)
            return visitor.BS(value.BS);
        if (value.M !== undefined)
            return visitor.M(value.M);
        if (value.L !== undefined)
            return visitor.L(value.L);
        if (value.NULL !== undefined)
            return visitor.NULL(value.NULL);
        if (value.BOOL !== undefined)
            return visitor.BOOL(value.BOOL);
        return visitor._(value.$unknown[0], value.$unknown[1]);
    };
})(AttributeValue = exports.AttributeValue || (exports.AttributeValue = {}));
class TransactionCanceledException extends DynamoDBServiceException_1.DynamoDBServiceException {
    constructor(opts) {
        super({
            name: "TransactionCanceledException",
            $fault: "client",
            ...opts,
        });
        this.name = "TransactionCanceledException";
        this.$fault = "client";
        Object.setPrototypeOf(this, TransactionCanceledException.prototype);
        this.Message = opts.Message;
        this.CancellationReasons = opts.CancellationReasons;
    }
}
exports.TransactionCanceledException = TransactionCanceledException;
const ArchivalSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ArchivalSummaryFilterSensitiveLog = ArchivalSummaryFilterSensitiveLog;
const AttributeDefinitionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AttributeDefinitionFilterSensitiveLog = AttributeDefinitionFilterSensitiveLog;
const AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionFilterSensitiveLog = AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionFilterSensitiveLog;
const AutoScalingPolicyDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AutoScalingPolicyDescriptionFilterSensitiveLog = AutoScalingPolicyDescriptionFilterSensitiveLog;
const AutoScalingTargetTrackingScalingPolicyConfigurationUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AutoScalingTargetTrackingScalingPolicyConfigurationUpdateFilterSensitiveLog = AutoScalingTargetTrackingScalingPolicyConfigurationUpdateFilterSensitiveLog;
const AutoScalingPolicyUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AutoScalingPolicyUpdateFilterSensitiveLog = AutoScalingPolicyUpdateFilterSensitiveLog;
const AutoScalingSettingsDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AutoScalingSettingsDescriptionFilterSensitiveLog = AutoScalingSettingsDescriptionFilterSensitiveLog;
const AutoScalingSettingsUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.AutoScalingSettingsUpdateFilterSensitiveLog = AutoScalingSettingsUpdateFilterSensitiveLog;
const BackupDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BackupDetailsFilterSensitiveLog = BackupDetailsFilterSensitiveLog;
const KeySchemaElementFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.KeySchemaElementFilterSensitiveLog = KeySchemaElementFilterSensitiveLog;
const ProvisionedThroughputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ProvisionedThroughputFilterSensitiveLog = ProvisionedThroughputFilterSensitiveLog;
const SourceTableDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SourceTableDetailsFilterSensitiveLog = SourceTableDetailsFilterSensitiveLog;
const ProjectionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ProjectionFilterSensitiveLog = ProjectionFilterSensitiveLog;
const GlobalSecondaryIndexInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GlobalSecondaryIndexInfoFilterSensitiveLog = GlobalSecondaryIndexInfoFilterSensitiveLog;
const LocalSecondaryIndexInfoFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LocalSecondaryIndexInfoFilterSensitiveLog = LocalSecondaryIndexInfoFilterSensitiveLog;
const SSEDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SSEDescriptionFilterSensitiveLog = SSEDescriptionFilterSensitiveLog;
const StreamSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.StreamSpecificationFilterSensitiveLog = StreamSpecificationFilterSensitiveLog;
const TimeToLiveDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TimeToLiveDescriptionFilterSensitiveLog = TimeToLiveDescriptionFilterSensitiveLog;
const SourceTableFeatureDetailsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SourceTableFeatureDetailsFilterSensitiveLog = SourceTableFeatureDetailsFilterSensitiveLog;
const BackupDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BackupDescriptionFilterSensitiveLog = BackupDescriptionFilterSensitiveLog;
const BackupSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BackupSummaryFilterSensitiveLog = BackupSummaryFilterSensitiveLog;
const CapacityFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CapacityFilterSensitiveLog = CapacityFilterSensitiveLog;
const ConsumedCapacityFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ConsumedCapacityFilterSensitiveLog = ConsumedCapacityFilterSensitiveLog;
const BatchStatementErrorFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BatchStatementErrorFilterSensitiveLog = BatchStatementErrorFilterSensitiveLog;
const BillingModeSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.BillingModeSummaryFilterSensitiveLog = BillingModeSummaryFilterSensitiveLog;
const PointInTimeRecoveryDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PointInTimeRecoveryDescriptionFilterSensitiveLog = PointInTimeRecoveryDescriptionFilterSensitiveLog;
const ContinuousBackupsDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContinuousBackupsDescriptionFilterSensitiveLog = ContinuousBackupsDescriptionFilterSensitiveLog;
const ContributorInsightsSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ContributorInsightsSummaryFilterSensitiveLog = ContributorInsightsSummaryFilterSensitiveLog;
const CreateBackupInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateBackupInputFilterSensitiveLog = CreateBackupInputFilterSensitiveLog;
const CreateBackupOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateBackupOutputFilterSensitiveLog = CreateBackupOutputFilterSensitiveLog;
const CreateGlobalSecondaryIndexActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateGlobalSecondaryIndexActionFilterSensitiveLog = CreateGlobalSecondaryIndexActionFilterSensitiveLog;
const ReplicaFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaFilterSensitiveLog = ReplicaFilterSensitiveLog;
const CreateGlobalTableInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateGlobalTableInputFilterSensitiveLog = CreateGlobalTableInputFilterSensitiveLog;
const ProvisionedThroughputOverrideFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ProvisionedThroughputOverrideFilterSensitiveLog = ProvisionedThroughputOverrideFilterSensitiveLog;
const ReplicaGlobalSecondaryIndexDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaGlobalSecondaryIndexDescriptionFilterSensitiveLog = ReplicaGlobalSecondaryIndexDescriptionFilterSensitiveLog;
const TableClassSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TableClassSummaryFilterSensitiveLog = TableClassSummaryFilterSensitiveLog;
const ReplicaDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaDescriptionFilterSensitiveLog = ReplicaDescriptionFilterSensitiveLog;
const GlobalTableDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GlobalTableDescriptionFilterSensitiveLog = GlobalTableDescriptionFilterSensitiveLog;
const CreateGlobalTableOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateGlobalTableOutputFilterSensitiveLog = CreateGlobalTableOutputFilterSensitiveLog;
const CreateReplicaActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateReplicaActionFilterSensitiveLog = CreateReplicaActionFilterSensitiveLog;
const ReplicaGlobalSecondaryIndexFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaGlobalSecondaryIndexFilterSensitiveLog = ReplicaGlobalSecondaryIndexFilterSensitiveLog;
const CreateReplicationGroupMemberActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateReplicationGroupMemberActionFilterSensitiveLog = CreateReplicationGroupMemberActionFilterSensitiveLog;
const GlobalSecondaryIndexFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GlobalSecondaryIndexFilterSensitiveLog = GlobalSecondaryIndexFilterSensitiveLog;
const LocalSecondaryIndexFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LocalSecondaryIndexFilterSensitiveLog = LocalSecondaryIndexFilterSensitiveLog;
const SSESpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.SSESpecificationFilterSensitiveLog = SSESpecificationFilterSensitiveLog;
const TagFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagFilterSensitiveLog = TagFilterSensitiveLog;
const CreateTableInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTableInputFilterSensitiveLog = CreateTableInputFilterSensitiveLog;
const ProvisionedThroughputDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ProvisionedThroughputDescriptionFilterSensitiveLog = ProvisionedThroughputDescriptionFilterSensitiveLog;
const GlobalSecondaryIndexDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GlobalSecondaryIndexDescriptionFilterSensitiveLog = GlobalSecondaryIndexDescriptionFilterSensitiveLog;
const LocalSecondaryIndexDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.LocalSecondaryIndexDescriptionFilterSensitiveLog = LocalSecondaryIndexDescriptionFilterSensitiveLog;
const RestoreSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RestoreSummaryFilterSensitiveLog = RestoreSummaryFilterSensitiveLog;
const TableDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TableDescriptionFilterSensitiveLog = TableDescriptionFilterSensitiveLog;
const CreateTableOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CreateTableOutputFilterSensitiveLog = CreateTableOutputFilterSensitiveLog;
const CsvOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.CsvOptionsFilterSensitiveLog = CsvOptionsFilterSensitiveLog;
const DeleteBackupInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteBackupInputFilterSensitiveLog = DeleteBackupInputFilterSensitiveLog;
const DeleteBackupOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteBackupOutputFilterSensitiveLog = DeleteBackupOutputFilterSensitiveLog;
const DeleteGlobalSecondaryIndexActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteGlobalSecondaryIndexActionFilterSensitiveLog = DeleteGlobalSecondaryIndexActionFilterSensitiveLog;
const DeleteReplicaActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteReplicaActionFilterSensitiveLog = DeleteReplicaActionFilterSensitiveLog;
const DeleteReplicationGroupMemberActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteReplicationGroupMemberActionFilterSensitiveLog = DeleteReplicationGroupMemberActionFilterSensitiveLog;
const DeleteTableInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTableInputFilterSensitiveLog = DeleteTableInputFilterSensitiveLog;
const DeleteTableOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DeleteTableOutputFilterSensitiveLog = DeleteTableOutputFilterSensitiveLog;
const DescribeBackupInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeBackupInputFilterSensitiveLog = DescribeBackupInputFilterSensitiveLog;
const DescribeBackupOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeBackupOutputFilterSensitiveLog = DescribeBackupOutputFilterSensitiveLog;
const DescribeContinuousBackupsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeContinuousBackupsInputFilterSensitiveLog = DescribeContinuousBackupsInputFilterSensitiveLog;
const DescribeContinuousBackupsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeContinuousBackupsOutputFilterSensitiveLog = DescribeContinuousBackupsOutputFilterSensitiveLog;
const DescribeContributorInsightsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeContributorInsightsInputFilterSensitiveLog = DescribeContributorInsightsInputFilterSensitiveLog;
const FailureExceptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.FailureExceptionFilterSensitiveLog = FailureExceptionFilterSensitiveLog;
const DescribeContributorInsightsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeContributorInsightsOutputFilterSensitiveLog = DescribeContributorInsightsOutputFilterSensitiveLog;
const DescribeEndpointsRequestFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEndpointsRequestFilterSensitiveLog = DescribeEndpointsRequestFilterSensitiveLog;
const EndpointFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.EndpointFilterSensitiveLog = EndpointFilterSensitiveLog;
const DescribeEndpointsResponseFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeEndpointsResponseFilterSensitiveLog = DescribeEndpointsResponseFilterSensitiveLog;
const DescribeExportInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeExportInputFilterSensitiveLog = DescribeExportInputFilterSensitiveLog;
const ExportDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExportDescriptionFilterSensitiveLog = ExportDescriptionFilterSensitiveLog;
const DescribeExportOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeExportOutputFilterSensitiveLog = DescribeExportOutputFilterSensitiveLog;
const DescribeGlobalTableInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeGlobalTableInputFilterSensitiveLog = DescribeGlobalTableInputFilterSensitiveLog;
const DescribeGlobalTableOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeGlobalTableOutputFilterSensitiveLog = DescribeGlobalTableOutputFilterSensitiveLog;
const DescribeGlobalTableSettingsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeGlobalTableSettingsInputFilterSensitiveLog = DescribeGlobalTableSettingsInputFilterSensitiveLog;
const ReplicaGlobalSecondaryIndexSettingsDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaGlobalSecondaryIndexSettingsDescriptionFilterSensitiveLog = ReplicaGlobalSecondaryIndexSettingsDescriptionFilterSensitiveLog;
const ReplicaSettingsDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaSettingsDescriptionFilterSensitiveLog = ReplicaSettingsDescriptionFilterSensitiveLog;
const DescribeGlobalTableSettingsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeGlobalTableSettingsOutputFilterSensitiveLog = DescribeGlobalTableSettingsOutputFilterSensitiveLog;
const DescribeImportInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeImportInputFilterSensitiveLog = DescribeImportInputFilterSensitiveLog;
const InputFormatOptionsFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.InputFormatOptionsFilterSensitiveLog = InputFormatOptionsFilterSensitiveLog;
const S3BucketSourceFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.S3BucketSourceFilterSensitiveLog = S3BucketSourceFilterSensitiveLog;
const TableCreationParametersFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TableCreationParametersFilterSensitiveLog = TableCreationParametersFilterSensitiveLog;
const ImportTableDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImportTableDescriptionFilterSensitiveLog = ImportTableDescriptionFilterSensitiveLog;
const DescribeImportOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeImportOutputFilterSensitiveLog = DescribeImportOutputFilterSensitiveLog;
const DescribeKinesisStreamingDestinationInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeKinesisStreamingDestinationInputFilterSensitiveLog = DescribeKinesisStreamingDestinationInputFilterSensitiveLog;
const KinesisDataStreamDestinationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.KinesisDataStreamDestinationFilterSensitiveLog = KinesisDataStreamDestinationFilterSensitiveLog;
const DescribeKinesisStreamingDestinationOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeKinesisStreamingDestinationOutputFilterSensitiveLog = DescribeKinesisStreamingDestinationOutputFilterSensitiveLog;
const DescribeLimitsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeLimitsInputFilterSensitiveLog = DescribeLimitsInputFilterSensitiveLog;
const DescribeLimitsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeLimitsOutputFilterSensitiveLog = DescribeLimitsOutputFilterSensitiveLog;
const DescribeTableInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeTableInputFilterSensitiveLog = DescribeTableInputFilterSensitiveLog;
const DescribeTableOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeTableOutputFilterSensitiveLog = DescribeTableOutputFilterSensitiveLog;
const DescribeTableReplicaAutoScalingInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeTableReplicaAutoScalingInputFilterSensitiveLog = DescribeTableReplicaAutoScalingInputFilterSensitiveLog;
const ReplicaGlobalSecondaryIndexAutoScalingDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaGlobalSecondaryIndexAutoScalingDescriptionFilterSensitiveLog = ReplicaGlobalSecondaryIndexAutoScalingDescriptionFilterSensitiveLog;
const ReplicaAutoScalingDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaAutoScalingDescriptionFilterSensitiveLog = ReplicaAutoScalingDescriptionFilterSensitiveLog;
const TableAutoScalingDescriptionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TableAutoScalingDescriptionFilterSensitiveLog = TableAutoScalingDescriptionFilterSensitiveLog;
const DescribeTableReplicaAutoScalingOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeTableReplicaAutoScalingOutputFilterSensitiveLog = DescribeTableReplicaAutoScalingOutputFilterSensitiveLog;
const DescribeTimeToLiveInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeTimeToLiveInputFilterSensitiveLog = DescribeTimeToLiveInputFilterSensitiveLog;
const DescribeTimeToLiveOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.DescribeTimeToLiveOutputFilterSensitiveLog = DescribeTimeToLiveOutputFilterSensitiveLog;
const KinesisStreamingDestinationInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.KinesisStreamingDestinationInputFilterSensitiveLog = KinesisStreamingDestinationInputFilterSensitiveLog;
const KinesisStreamingDestinationOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.KinesisStreamingDestinationOutputFilterSensitiveLog = KinesisStreamingDestinationOutputFilterSensitiveLog;
const ExportTableToPointInTimeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExportTableToPointInTimeInputFilterSensitiveLog = ExportTableToPointInTimeInputFilterSensitiveLog;
const ExportTableToPointInTimeOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExportTableToPointInTimeOutputFilterSensitiveLog = ExportTableToPointInTimeOutputFilterSensitiveLog;
const ImportTableInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImportTableInputFilterSensitiveLog = ImportTableInputFilterSensitiveLog;
const ImportTableOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImportTableOutputFilterSensitiveLog = ImportTableOutputFilterSensitiveLog;
const ListBackupsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListBackupsInputFilterSensitiveLog = ListBackupsInputFilterSensitiveLog;
const ListBackupsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListBackupsOutputFilterSensitiveLog = ListBackupsOutputFilterSensitiveLog;
const ListContributorInsightsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListContributorInsightsInputFilterSensitiveLog = ListContributorInsightsInputFilterSensitiveLog;
const ListContributorInsightsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListContributorInsightsOutputFilterSensitiveLog = ListContributorInsightsOutputFilterSensitiveLog;
const ListExportsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListExportsInputFilterSensitiveLog = ListExportsInputFilterSensitiveLog;
const ExportSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ExportSummaryFilterSensitiveLog = ExportSummaryFilterSensitiveLog;
const ListExportsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListExportsOutputFilterSensitiveLog = ListExportsOutputFilterSensitiveLog;
const ListGlobalTablesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListGlobalTablesInputFilterSensitiveLog = ListGlobalTablesInputFilterSensitiveLog;
const GlobalTableFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GlobalTableFilterSensitiveLog = GlobalTableFilterSensitiveLog;
const ListGlobalTablesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListGlobalTablesOutputFilterSensitiveLog = ListGlobalTablesOutputFilterSensitiveLog;
const ListImportsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListImportsInputFilterSensitiveLog = ListImportsInputFilterSensitiveLog;
const ImportSummaryFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ImportSummaryFilterSensitiveLog = ImportSummaryFilterSensitiveLog;
const ListImportsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListImportsOutputFilterSensitiveLog = ListImportsOutputFilterSensitiveLog;
const ListTablesInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTablesInputFilterSensitiveLog = ListTablesInputFilterSensitiveLog;
const ListTablesOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTablesOutputFilterSensitiveLog = ListTablesOutputFilterSensitiveLog;
const ListTagsOfResourceInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsOfResourceInputFilterSensitiveLog = ListTagsOfResourceInputFilterSensitiveLog;
const ListTagsOfResourceOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ListTagsOfResourceOutputFilterSensitiveLog = ListTagsOfResourceOutputFilterSensitiveLog;
const RestoreTableFromBackupInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RestoreTableFromBackupInputFilterSensitiveLog = RestoreTableFromBackupInputFilterSensitiveLog;
const RestoreTableFromBackupOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RestoreTableFromBackupOutputFilterSensitiveLog = RestoreTableFromBackupOutputFilterSensitiveLog;
const RestoreTableToPointInTimeInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RestoreTableToPointInTimeInputFilterSensitiveLog = RestoreTableToPointInTimeInputFilterSensitiveLog;
const RestoreTableToPointInTimeOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.RestoreTableToPointInTimeOutputFilterSensitiveLog = RestoreTableToPointInTimeOutputFilterSensitiveLog;
const TagResourceInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TagResourceInputFilterSensitiveLog = TagResourceInputFilterSensitiveLog;
const UntagResourceInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UntagResourceInputFilterSensitiveLog = UntagResourceInputFilterSensitiveLog;
const PointInTimeRecoverySpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.PointInTimeRecoverySpecificationFilterSensitiveLog = PointInTimeRecoverySpecificationFilterSensitiveLog;
const UpdateContinuousBackupsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateContinuousBackupsInputFilterSensitiveLog = UpdateContinuousBackupsInputFilterSensitiveLog;
const UpdateContinuousBackupsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateContinuousBackupsOutputFilterSensitiveLog = UpdateContinuousBackupsOutputFilterSensitiveLog;
const UpdateContributorInsightsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateContributorInsightsInputFilterSensitiveLog = UpdateContributorInsightsInputFilterSensitiveLog;
const UpdateContributorInsightsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateContributorInsightsOutputFilterSensitiveLog = UpdateContributorInsightsOutputFilterSensitiveLog;
const ReplicaUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaUpdateFilterSensitiveLog = ReplicaUpdateFilterSensitiveLog;
const UpdateGlobalTableInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateGlobalTableInputFilterSensitiveLog = UpdateGlobalTableInputFilterSensitiveLog;
const UpdateGlobalTableOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateGlobalTableOutputFilterSensitiveLog = UpdateGlobalTableOutputFilterSensitiveLog;
const GlobalTableGlobalSecondaryIndexSettingsUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GlobalTableGlobalSecondaryIndexSettingsUpdateFilterSensitiveLog = GlobalTableGlobalSecondaryIndexSettingsUpdateFilterSensitiveLog;
const ReplicaGlobalSecondaryIndexSettingsUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaGlobalSecondaryIndexSettingsUpdateFilterSensitiveLog = ReplicaGlobalSecondaryIndexSettingsUpdateFilterSensitiveLog;
const ReplicaSettingsUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaSettingsUpdateFilterSensitiveLog = ReplicaSettingsUpdateFilterSensitiveLog;
const UpdateGlobalTableSettingsInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateGlobalTableSettingsInputFilterSensitiveLog = UpdateGlobalTableSettingsInputFilterSensitiveLog;
const UpdateGlobalTableSettingsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateGlobalTableSettingsOutputFilterSensitiveLog = UpdateGlobalTableSettingsOutputFilterSensitiveLog;
const UpdateGlobalSecondaryIndexActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateGlobalSecondaryIndexActionFilterSensitiveLog = UpdateGlobalSecondaryIndexActionFilterSensitiveLog;
const GlobalSecondaryIndexUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GlobalSecondaryIndexUpdateFilterSensitiveLog = GlobalSecondaryIndexUpdateFilterSensitiveLog;
const UpdateReplicationGroupMemberActionFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateReplicationGroupMemberActionFilterSensitiveLog = UpdateReplicationGroupMemberActionFilterSensitiveLog;
const ReplicationGroupUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicationGroupUpdateFilterSensitiveLog = ReplicationGroupUpdateFilterSensitiveLog;
const UpdateTableInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateTableInputFilterSensitiveLog = UpdateTableInputFilterSensitiveLog;
const UpdateTableOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateTableOutputFilterSensitiveLog = UpdateTableOutputFilterSensitiveLog;
const GlobalSecondaryIndexAutoScalingUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.GlobalSecondaryIndexAutoScalingUpdateFilterSensitiveLog = GlobalSecondaryIndexAutoScalingUpdateFilterSensitiveLog;
const ReplicaGlobalSecondaryIndexAutoScalingUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaGlobalSecondaryIndexAutoScalingUpdateFilterSensitiveLog = ReplicaGlobalSecondaryIndexAutoScalingUpdateFilterSensitiveLog;
const ReplicaAutoScalingUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.ReplicaAutoScalingUpdateFilterSensitiveLog = ReplicaAutoScalingUpdateFilterSensitiveLog;
const UpdateTableReplicaAutoScalingInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateTableReplicaAutoScalingInputFilterSensitiveLog = UpdateTableReplicaAutoScalingInputFilterSensitiveLog;
const UpdateTableReplicaAutoScalingOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateTableReplicaAutoScalingOutputFilterSensitiveLog = UpdateTableReplicaAutoScalingOutputFilterSensitiveLog;
const TimeToLiveSpecificationFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.TimeToLiveSpecificationFilterSensitiveLog = TimeToLiveSpecificationFilterSensitiveLog;
const UpdateTimeToLiveInputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateTimeToLiveInputFilterSensitiveLog = UpdateTimeToLiveInputFilterSensitiveLog;
const UpdateTimeToLiveOutputFilterSensitiveLog = (obj) => ({
    ...obj,
});
exports.UpdateTimeToLiveOutputFilterSensitiveLog = UpdateTimeToLiveOutputFilterSensitiveLog;
const AttributeValueFilterSensitiveLog = (obj) => {
    if (obj.S !== undefined)
        return { S: obj.S };
    if (obj.N !== undefined)
        return { N: obj.N };
    if (obj.B !== undefined)
        return { B: obj.B };
    if (obj.SS !== undefined)
        return { SS: obj.SS };
    if (obj.NS !== undefined)
        return { NS: obj.NS };
    if (obj.BS !== undefined)
        return { BS: obj.BS };
    if (obj.M !== undefined)
        return {
            M: Object.entries(obj.M).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
        };
    if (obj.L !== undefined)
        return { L: obj.L.map((item) => (0, exports.AttributeValueFilterSensitiveLog)(item)) };
    if (obj.NULL !== undefined)
        return { NULL: obj.NULL };
    if (obj.BOOL !== undefined)
        return { BOOL: obj.BOOL };
    if (obj.$unknown !== undefined)
        return { [obj.$unknown[0]]: "UNKNOWN" };
};
exports.AttributeValueFilterSensitiveLog = AttributeValueFilterSensitiveLog;
const AttributeValueUpdateFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Value && { Value: (0, exports.AttributeValueFilterSensitiveLog)(obj.Value) }),
});
exports.AttributeValueUpdateFilterSensitiveLog = AttributeValueUpdateFilterSensitiveLog;
const BatchStatementRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Parameters && { Parameters: obj.Parameters.map((item) => (0, exports.AttributeValueFilterSensitiveLog)(item)) }),
});
exports.BatchStatementRequestFilterSensitiveLog = BatchStatementRequestFilterSensitiveLog;
const BatchStatementResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Item && {
        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.BatchStatementResponseFilterSensitiveLog = BatchStatementResponseFilterSensitiveLog;
const CancellationReasonFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Item && {
        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.CancellationReasonFilterSensitiveLog = CancellationReasonFilterSensitiveLog;
const ConditionFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.AttributeValueList && {
        AttributeValueList: obj.AttributeValueList.map((item) => (0, exports.AttributeValueFilterSensitiveLog)(item)),
    }),
});
exports.ConditionFilterSensitiveLog = ConditionFilterSensitiveLog;
const DeleteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Key && {
        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.DeleteRequestFilterSensitiveLog = DeleteRequestFilterSensitiveLog;
const ExecuteStatementInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Parameters && { Parameters: obj.Parameters.map((item) => (0, exports.AttributeValueFilterSensitiveLog)(item)) }),
});
exports.ExecuteStatementInputFilterSensitiveLog = ExecuteStatementInputFilterSensitiveLog;
const GetFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Key && {
        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.GetFilterSensitiveLog = GetFilterSensitiveLog;
const GetItemInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Key && {
        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.GetItemInputFilterSensitiveLog = GetItemInputFilterSensitiveLog;
const GetItemOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Item && {
        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.GetItemOutputFilterSensitiveLog = GetItemOutputFilterSensitiveLog;
const ItemCollectionMetricsFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ItemCollectionKey && {
        ItemCollectionKey: Object.entries(obj.ItemCollectionKey).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.ItemCollectionMetricsFilterSensitiveLog = ItemCollectionMetricsFilterSensitiveLog;
const ItemResponseFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Item && {
        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.ItemResponseFilterSensitiveLog = ItemResponseFilterSensitiveLog;
const ParameterizedStatementFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Parameters && { Parameters: obj.Parameters.map((item) => (0, exports.AttributeValueFilterSensitiveLog)(item)) }),
});
exports.ParameterizedStatementFilterSensitiveLog = ParameterizedStatementFilterSensitiveLog;
const PutRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Item && {
        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.PutRequestFilterSensitiveLog = PutRequestFilterSensitiveLog;
const KeysAndAttributesFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Keys && {
        Keys: obj.Keys.map((item) => Object.entries(item).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {})),
    }),
});
exports.KeysAndAttributesFilterSensitiveLog = KeysAndAttributesFilterSensitiveLog;
const TransactGetItemFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Get && { Get: (0, exports.GetFilterSensitiveLog)(obj.Get) }),
});
exports.TransactGetItemFilterSensitiveLog = TransactGetItemFilterSensitiveLog;
const BatchExecuteStatementInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Statements && { Statements: obj.Statements.map((item) => (0, exports.BatchStatementRequestFilterSensitiveLog)(item)) }),
});
exports.BatchExecuteStatementInputFilterSensitiveLog = BatchExecuteStatementInputFilterSensitiveLog;
const BatchExecuteStatementOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Responses && { Responses: obj.Responses.map((item) => (0, exports.BatchStatementResponseFilterSensitiveLog)(item)) }),
});
exports.BatchExecuteStatementOutputFilterSensitiveLog = BatchExecuteStatementOutputFilterSensitiveLog;
const ExecuteTransactionInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.TransactStatements && {
        TransactStatements: obj.TransactStatements.map((item) => (0, exports.ParameterizedStatementFilterSensitiveLog)(item)),
    }),
});
exports.ExecuteTransactionInputFilterSensitiveLog = ExecuteTransactionInputFilterSensitiveLog;
const ExecuteTransactionOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Responses && { Responses: obj.Responses.map((item) => (0, exports.ItemResponseFilterSensitiveLog)(item)) }),
});
exports.ExecuteTransactionOutputFilterSensitiveLog = ExecuteTransactionOutputFilterSensitiveLog;
const TransactGetItemsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Responses && { Responses: obj.Responses.map((item) => (0, exports.ItemResponseFilterSensitiveLog)(item)) }),
});
exports.TransactGetItemsOutputFilterSensitiveLog = TransactGetItemsOutputFilterSensitiveLog;
const BatchGetItemInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RequestItems && {
        RequestItems: Object.entries(obj.RequestItems).reduce((acc, [key, value]) => ((acc[key] = (0, exports.KeysAndAttributesFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.BatchGetItemInputFilterSensitiveLog = BatchGetItemInputFilterSensitiveLog;
const ExpectedAttributeValueFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Value && { Value: (0, exports.AttributeValueFilterSensitiveLog)(obj.Value) }),
    ...(obj.AttributeValueList && {
        AttributeValueList: obj.AttributeValueList.map((item) => (0, exports.AttributeValueFilterSensitiveLog)(item)),
    }),
});
exports.ExpectedAttributeValueFilterSensitiveLog = ExpectedAttributeValueFilterSensitiveLog;
const TransactGetItemsInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.TransactItems && { TransactItems: obj.TransactItems.map((item) => (0, exports.TransactGetItemFilterSensitiveLog)(item)) }),
});
exports.TransactGetItemsInputFilterSensitiveLog = TransactGetItemsInputFilterSensitiveLog;
const TransactWriteItemsOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ItemCollectionMetrics && {
        ItemCollectionMetrics: Object.entries(obj.ItemCollectionMetrics).reduce((acc, [key, value]) => ((acc[key] = value.map((item) => (0, exports.ItemCollectionMetricsFilterSensitiveLog)(item))), acc), {}),
    }),
});
exports.TransactWriteItemsOutputFilterSensitiveLog = TransactWriteItemsOutputFilterSensitiveLog;
const ConditionCheckFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Key && {
        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ExpressionAttributeValues && {
        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.ConditionCheckFilterSensitiveLog = ConditionCheckFilterSensitiveLog;
const DeleteFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Key && {
        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ExpressionAttributeValues && {
        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.DeleteFilterSensitiveLog = DeleteFilterSensitiveLog;
const PutFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Item && {
        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ExpressionAttributeValues && {
        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.PutFilterSensitiveLog = PutFilterSensitiveLog;
const UpdateFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Key && {
        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ExpressionAttributeValues && {
        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.UpdateFilterSensitiveLog = UpdateFilterSensitiveLog;
const DeleteItemOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attributes && {
        Attributes: Object.entries(obj.Attributes).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ItemCollectionMetrics && {
        ItemCollectionMetrics: (0, exports.ItemCollectionMetricsFilterSensitiveLog)(obj.ItemCollectionMetrics),
    }),
});
exports.DeleteItemOutputFilterSensitiveLog = DeleteItemOutputFilterSensitiveLog;
const ExecuteStatementOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Items && {
        Items: obj.Items.map((item) => Object.entries(item).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {})),
    }),
    ...(obj.LastEvaluatedKey && {
        LastEvaluatedKey: Object.entries(obj.LastEvaluatedKey).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.ExecuteStatementOutputFilterSensitiveLog = ExecuteStatementOutputFilterSensitiveLog;
const PutItemOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attributes && {
        Attributes: Object.entries(obj.Attributes).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ItemCollectionMetrics && {
        ItemCollectionMetrics: (0, exports.ItemCollectionMetricsFilterSensitiveLog)(obj.ItemCollectionMetrics),
    }),
});
exports.PutItemOutputFilterSensitiveLog = PutItemOutputFilterSensitiveLog;
const QueryOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Items && {
        Items: obj.Items.map((item) => Object.entries(item).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {})),
    }),
    ...(obj.LastEvaluatedKey && {
        LastEvaluatedKey: Object.entries(obj.LastEvaluatedKey).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.QueryOutputFilterSensitiveLog = QueryOutputFilterSensitiveLog;
const ScanOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Items && {
        Items: obj.Items.map((item) => Object.entries(item).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {})),
    }),
    ...(obj.LastEvaluatedKey && {
        LastEvaluatedKey: Object.entries(obj.LastEvaluatedKey).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.ScanOutputFilterSensitiveLog = ScanOutputFilterSensitiveLog;
const UpdateItemOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Attributes && {
        Attributes: Object.entries(obj.Attributes).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ItemCollectionMetrics && {
        ItemCollectionMetrics: (0, exports.ItemCollectionMetricsFilterSensitiveLog)(obj.ItemCollectionMetrics),
    }),
});
exports.UpdateItemOutputFilterSensitiveLog = UpdateItemOutputFilterSensitiveLog;
const WriteRequestFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.PutRequest && { PutRequest: (0, exports.PutRequestFilterSensitiveLog)(obj.PutRequest) }),
    ...(obj.DeleteRequest && { DeleteRequest: (0, exports.DeleteRequestFilterSensitiveLog)(obj.DeleteRequest) }),
});
exports.WriteRequestFilterSensitiveLog = WriteRequestFilterSensitiveLog;
const BatchGetItemOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Responses && {
        Responses: Object.entries(obj.Responses).reduce((acc, [key, value]) => ((acc[key] = value.map((item) => Object.entries(item).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}))),
            acc), {}),
    }),
    ...(obj.UnprocessedKeys && {
        UnprocessedKeys: Object.entries(obj.UnprocessedKeys).reduce((acc, [key, value]) => ((acc[key] = (0, exports.KeysAndAttributesFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.BatchGetItemOutputFilterSensitiveLog = BatchGetItemOutputFilterSensitiveLog;
const ScanInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ScanFilter && {
        ScanFilter: Object.entries(obj.ScanFilter).reduce((acc, [key, value]) => ((acc[key] = (0, exports.ConditionFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ExclusiveStartKey && {
        ExclusiveStartKey: Object.entries(obj.ExclusiveStartKey).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ExpressionAttributeValues && {
        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.ScanInputFilterSensitiveLog = ScanInputFilterSensitiveLog;
const BatchWriteItemInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.RequestItems && {
        RequestItems: Object.entries(obj.RequestItems).reduce((acc, [key, value]) => ((acc[key] = value.map((item) => (0, exports.WriteRequestFilterSensitiveLog)(item))), acc), {}),
    }),
});
exports.BatchWriteItemInputFilterSensitiveLog = BatchWriteItemInputFilterSensitiveLog;
const DeleteItemInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Key && {
        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.Expected && {
        Expected: Object.entries(obj.Expected).reduce((acc, [key, value]) => ((acc[key] = (0, exports.ExpectedAttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ExpressionAttributeValues && {
        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.DeleteItemInputFilterSensitiveLog = DeleteItemInputFilterSensitiveLog;
const PutItemInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Item && {
        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.Expected && {
        Expected: Object.entries(obj.Expected).reduce((acc, [key, value]) => ((acc[key] = (0, exports.ExpectedAttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ExpressionAttributeValues && {
        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.PutItemInputFilterSensitiveLog = PutItemInputFilterSensitiveLog;
const QueryInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.KeyConditions && {
        KeyConditions: Object.entries(obj.KeyConditions).reduce((acc, [key, value]) => ((acc[key] = (0, exports.ConditionFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.QueryFilter && {
        QueryFilter: Object.entries(obj.QueryFilter).reduce((acc, [key, value]) => ((acc[key] = (0, exports.ConditionFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ExclusiveStartKey && {
        ExclusiveStartKey: Object.entries(obj.ExclusiveStartKey).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ExpressionAttributeValues && {
        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.QueryInputFilterSensitiveLog = QueryInputFilterSensitiveLog;
const BatchWriteItemOutputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.UnprocessedItems && {
        UnprocessedItems: Object.entries(obj.UnprocessedItems).reduce((acc, [key, value]) => ((acc[key] = value.map((item) => (0, exports.WriteRequestFilterSensitiveLog)(item))), acc), {}),
    }),
    ...(obj.ItemCollectionMetrics && {
        ItemCollectionMetrics: Object.entries(obj.ItemCollectionMetrics).reduce((acc, [key, value]) => ((acc[key] = value.map((item) => (0, exports.ItemCollectionMetricsFilterSensitiveLog)(item))), acc), {}),
    }),
});
exports.BatchWriteItemOutputFilterSensitiveLog = BatchWriteItemOutputFilterSensitiveLog;
const UpdateItemInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.Key && {
        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.AttributeUpdates && {
        AttributeUpdates: Object.entries(obj.AttributeUpdates).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueUpdateFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.Expected && {
        Expected: Object.entries(obj.Expected).reduce((acc, [key, value]) => ((acc[key] = (0, exports.ExpectedAttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
    ...(obj.ExpressionAttributeValues && {
        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = (0, exports.AttributeValueFilterSensitiveLog)(value)), acc), {}),
    }),
});
exports.UpdateItemInputFilterSensitiveLog = UpdateItemInputFilterSensitiveLog;
const TransactWriteItemFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.ConditionCheck && { ConditionCheck: (0, exports.ConditionCheckFilterSensitiveLog)(obj.ConditionCheck) }),
    ...(obj.Put && { Put: (0, exports.PutFilterSensitiveLog)(obj.Put) }),
    ...(obj.Delete && { Delete: (0, exports.DeleteFilterSensitiveLog)(obj.Delete) }),
    ...(obj.Update && { Update: (0, exports.UpdateFilterSensitiveLog)(obj.Update) }),
});
exports.TransactWriteItemFilterSensitiveLog = TransactWriteItemFilterSensitiveLog;
const TransactWriteItemsInputFilterSensitiveLog = (obj) => ({
    ...obj,
    ...(obj.TransactItems && {
        TransactItems: obj.TransactItems.map((item) => (0, exports.TransactWriteItemFilterSensitiveLog)(item)),
    }),
});
exports.TransactWriteItemsInputFilterSensitiveLog = TransactWriteItemsInputFilterSensitiveLog;
